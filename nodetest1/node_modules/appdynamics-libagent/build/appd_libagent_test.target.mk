# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := appd_libagent_test
### Generated for copy rule.
$(srcdir)/ca-bundle.crt: TOOLSET := $(TOOLSET)
$(srcdir)/ca-bundle.crt: /build/jenkins/workspace/codebase@0/agent/libagent/build/ca-bundle.crt FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(srcdir)/ca-bundle.crt
binding_gyp_appd_libagent_test_target_copies = $(srcdir)/ca-bundle.crt

DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=appd_libagent_test' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUNIT_TEST' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++0x \
	-std=c++11

INCS_Debug := \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/vendor/boost/build/binaries/x64/include/boost-1_63 \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/build/protos \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/include \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/src \
	-I$(srcdir)/../../../../node_modules/nan \
	-I/root/.node-gyp/4.0.0/include/node \
	-I/root/.node-gyp/4.0.0/src \
	-I/root/.node-gyp/4.0.0/deps/uv/include \
	-I/root/.node-gyp/4.0.0/deps/v8/include \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/vendor/protobuf/build/binaries/x64/debug/include \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/vendor/cpprestsdk/build/binaries/x64/debug/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=appd_libagent_test' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUNIT_TEST' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-fPIC \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-ffunction-sections \
	-fdata-sections \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++0x \
	-std=c++11

INCS_Release := \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/vendor/boost/build/binaries/x64/include/boost-1_63 \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/build/protos \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/include \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/src \
	-I$(srcdir)/../../../../node_modules/nan \
	-I/root/.node-gyp/4.0.0/include/node \
	-I/root/.node-gyp/4.0.0/src \
	-I/root/.node-gyp/4.0.0/deps/uv/include \
	-I/root/.node-gyp/4.0.0/deps/v8/include \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/vendor/protobuf/build/binaries/x64/release/include \
	-I/build/jenkins/workspace/codebase@0/agent/libagent/vendor/cpprestsdk/build/binaries/x64/release/include

OBJS := \
	$(obj).target/$(TARGET)/src/pending_request.o \
	$(obj).target/$(TARGET)/src/node_agent.o \
	$(obj).target/$(TARGET)/src/node_delegate.o \
	$(obj).target/$(TARGET)/src/object_accessor.o \
	$(obj).target/$(TARGET)/src/request.o \
	$(obj).target/$(TARGET)/src/request_wrapper.o \
	$(obj).target/$(TARGET)/src/snapshot.o \
	$(obj).target/$(TARGET)/src/libagent_test.o \
	$(obj).target/$(TARGET)/spec/libagentMock/app_agent_mock.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our actions/rules run before any of us.
$(OBJS): | $(binding_gyp_appd_libagent_test_target_copies)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
# Build our special outputs first.
$(obj).target/appd_libagent_test.node: | $(binding_gyp_appd_libagent_test_target_copies)

# Preserve order dependency of special output on deps.
$(binding_gyp_appd_libagent_test_target_copies): | 

LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64 \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/vendor/protobuf/build/binaries/x64/debug//lib \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/vendor/cpprestsdk/build/binaries/x64/debug//lib \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/vendor/openssl/build/binaries/x64/debug//lib \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/vendor/boost/build/binaries/x64//lib \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/build/libs/appagent/static/x64/debug/ \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/build/libs/agent/static/x64/debug/ \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/build/libs/httpclient/static/x64/debug/ \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/build/libs/proto/static/x64/debug/

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64 \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/vendor/protobuf/build/binaries/x64/release//lib \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/vendor/cpprestsdk/build/binaries/x64/release//lib \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/vendor/openssl/build/binaries/x64/release//lib \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/vendor/boost/build/binaries/x64//lib \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/build/libs/appagent/static/x64/release/ \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/build/libs/agent/static/x64/release/ \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/build/libs/httpclient/static/x64/release/ \
	-L/build/jenkins/workspace/codebase@0/agent/libagent/build/libs/proto/static/x64/release/

LIBS := \
	-lappagent \
	-lagent \
	-lproto \
	-lhttpclient \
	-lcpprest \
	-lprotobuf \
	-lboost_system-gcc48-mt-s-1_63 \
	-lboost_timer-gcc48-mt-s-1_63 \
	-lboost_chrono-gcc48-mt-s-1_63 \
	-lboost_atomic-gcc48-mt-s-1_63 \
	-lboost_log-gcc48-mt-s-1_63 \
	-lboost_log_setup-gcc48-mt-s-1_63 \
	-lboost_filesystem-gcc48-mt-s-1_63 \
	-lboost_regex-gcc48-mt-s-1_63 \
	-lboost_date_time-gcc48-mt-s-1_63 \
	-lboost_thread-gcc48-mt-s-1_63 \
	-lboost_zlib-gcc48-mt-s-1_63 \
	-lboost_iostreams-gcc48-mt-s-1_63

$(obj).target/appd_libagent_test.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/appd_libagent_test.node: LIBS := $(LIBS)
$(obj).target/appd_libagent_test.node: TOOLSET := $(TOOLSET)
$(obj).target/appd_libagent_test.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/appd_libagent_test.node
# Add target alias
.PHONY: appd_libagent_test
appd_libagent_test: $(builddir)/appd_libagent_test.node

# Copy this to the executable output path.
$(builddir)/appd_libagent_test.node: TOOLSET := $(TOOLSET)
$(builddir)/appd_libagent_test.node: $(obj).target/appd_libagent_test.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/appd_libagent_test.node
# Short alias for building this executable.
.PHONY: appd_libagent_test.node
appd_libagent_test.node: $(obj).target/appd_libagent_test.node $(builddir)/appd_libagent_test.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/appd_libagent_test.node

